apply plugin: 'com.android.library'
apply plugin: 'maven'

android {
    def acceleratorVersion = '1.0.11'
    compileSdkVersion 30
    buildToolsVersion "30.0.0"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 2
        versionName "1.0.11"

        project.archivesBaseName = "opentok-accelerator-textchat"
        project.version = acceleratorVersion
    }
    buildTypes {
        release {
            minifyEnabled false
            buildConfigField 'String', 'acceleratorVersion', '\"'+acceleratorVersion+'\"'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            buildConfigField 'String', 'acceleratorVersion', '\"'+acceleratorVersion+'\"'
        }
    }

    lintOptions {
        abortOnError false
    }

    libraryVariants.all { variant ->

        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.aar')) {
                def fileName = "${archivesBaseName}-${version}.aar"
                //output.outputFile = new File(outputFile.parent, fileName)
                output.outputFileName = fileName
            }
        }

        def javadoc = task("generateJavaDoc${variant.name.capitalize()}", type: Javadoc, dependsOn: "generate${variant.name.capitalize()}Sources") {
            source = 'src/main/java'
            classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
            destinationDir = file("build/outputs/docs/")
            title = 'OpenTok Android TextChat Accelerator Pack'
            exclude "**/config/**"
            exclude "**/logging/**"
        }

        def zipBundle = task("zipBundle${variant.name.capitalize()}", type: Zip) {
            from ('build/outputs')
            include '**/aar/**'
            include '**/docs/**'
            exclude '**/lint-results-debug_files/**'
            destinationDirectory = file(".")
            archiveFileName = "${archivesBaseName}-${archiveVersion}.zip"
        }

        task("printVersion${variant.name.capitalize()}") {
            println project.version
        }

        zipBundle.dependsOn build
        zipBundle.dependsOn javadoc

    }
    testOptions {
        unitTests.returnDefaultValues = true
    }

    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE'
    }
}

if (project.hasProperty("MAVEN_USERNAME") && project.hasProperty("MAVEN_PASSWORD")) {
    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: "https://api.bintray.com/maven/tokbox/maven/${ARTIFACT_ID}/;publish=1") {
                    authentication(userName: "$MAVEN_USERNAME" ? "$MAVEN_USERNAME" : "", password: "$MAVEN_PASSWORD" ? "$MAVEN_PASSWORD" : "")
                }
                def (revision, buildTime) = getRevisionAndTime()
                pom.version = "${version}"
                pom.groupId = 'com.opentok.android'
                pom.artifactId = "${ARTIFACT_ID}"
            }
        }
    }
}

def checkMaven = task("checkUploadArchivesDeps") {
    doFirst {
        if (!project.hasProperty("MAVEN_USERNAME")) {
            throw new GradleException("MAVEN_USERNAME Property not defined")
        }
        if (!project.hasProperty("MAVEN_PASSWORD")) {
            throw new GradleException("MAVEN_PASSWORD Property not defined")
        }
    }
}

uploadArchives.dependsOn checkMaven

def getRevisionAndTime() {
    def date = new Date()
    def hash = 'git rev-parse --verify HEAD'.execute().text.trim()
    TimeZone.setDefault(TimeZone.getTimeZone('PST'))
    def formattedDate = date.format('yyyyMMddHHmmss')
    return ["${hash}".toString(), formattedDate.toString()]
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation 'junit:junit:4.13'
        implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'com.opentok.android:opentok-accelerator-core:1.0.23'
}
